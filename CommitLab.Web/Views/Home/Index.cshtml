@{
  ViewBag.Title = "KRD SourceMiner Browser";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
  <center>
    <div class="hero-unit">
      <h3><b><font color="black">Contributions for @System.Environment.UserName <span data-bind="text: currentUser"></span></font></b></h3>
    </div>
    <div id="cal-heatmap"></div>
    <script type="text/javascript">
      var cal = new CalHeatMap();
      var curr = new Date();
      cal.init({
        start: new Date(curr.getFullYear() - 1, curr.getMonth()),
        range: 13,
        domain: "month",
        subDomain: "day",
        cellSize: 13,
        cellPadding: 4,
        tooltip: true,
        legend: [2, 4, 6, 8],
        onClick: function (date) {
          commitsViewModel.setDateValue(date);
          commitsViewModel.getCommitsOneDay();
        }
      });
    </script>
    <br />
      <canvas id="repos"></canvas>
  </center>
  <br />
  <br />

  <div id="calendarViewModel">
    <div class="row">
      <div class="span4">
        <div class="jumbotron">
          <center>
            <i class="fa fa-area-chart fa-5x"></i>
            <p class="black">Contributions in the last year:</p>
            <p class="info" data-bind="text: commitsLastYear"></p>
            <p class="black" data-bind="text: periodLastYear"></p>
          </center>
        </div>
      </div>
      <div class="span4">
        <div class="jumbotron">
          <center>
            <i class="fa fa-bolt fa-5x"></i>
            <p class="black">Longest streak:</p>
            <p class="info" data-bind="text: longestStreak"></p>
            <p class="black" data-bind="text: longestStreakPeriod"></p>
          </center>
        </div>
      </div>
      <div class="span4">
        <div class="jumbotron">
          <center>
            <i class="fa fa-refresh fa-5x"></i>
            <p class="black">Current streak: </p>
            <p class="info" data-bind="text: currentStreak"></p>
            <p class="black" data-bind="text: currentStreakPeriod"></p>
          </center>
        </div>
      </div>
    </div>
  </div>
  <div id="commitsViewModel">
    <div class="row">
      <div class="span4">
        <p class="info">Contribution activity</p>
      </div>
      <div class="pull-right">
        <div class="btn-group">
          <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
            <span data-bind="text: periodInfo"></span>
            <span class="caret"></span>
          </button>
          <ul class="dropdown-menu" role="menu">
            <li class="dropdown-header">Filter activity</li>
            <li><a id="1" href="#">1 day</a></li>
            <li><a id="2" href="#">3 days</a></li>
            <li><a id="3" href="#">1 week</a></li>
            <li><a id="4" href="#">3 weeks</a></li>
            <li><a id="5" href="#">30 days</a></li>
            <li><a id="6" href="#">60 days</a></li>
          </ul>
        </div>
      </div>
    </div>
    <div class="btn-group">
      <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
        <span data-bind="text: sortInfo"></span>
        <span class="caret"></span>
      </button>
      <ul class="dropdown-menu" role="menu">
        <li class="dropdown-header">Sort type</li>
        <li><a id="s1" href="#">Sort by repostory names</a></li>
        <li><a id="s2" href="#">Sort by dates</a></li>
      </ul>
    </div>
    <div class="row">
      <div class="span12">
        <div class="jumbotron">
          <center>
            <p class="black" data-bind="text: noActivity"></p>
            <div data-bind="foreach: reposArray">
              <p class="info" data-bind="text:$data.name"></p>
              <h4 class="title"><span data-bind="text:numberOfCommits"></span></h4>
              <div data-bind="foreach: $data.repos">
                <p class="blackleft" data-bind="text: $data.rep"></p>
              </div>
              <hr />
            </div>
            <div data-bind="foreach: commitsArraySortedBydate">
              <p class="blackleft" data-bind="text:$data.name"></p>
            </div>
          </center>
        </div>
      </div>
    </div>
  </div>
</div>
@section scripts
{
  <script type="text/javascript" src="@Url.Content("~/Scripts/ViewModels/UserNameViewModel.js")"> </script>
  <script type="text/javascript" src="@Url.Content("~/Scripts/ViewModels/BranchNameViewModel.js")"> </script>
  <script type="text/javascript" src="@Url.Content("~/Scripts/ViewModels/RepositoryNameViewModel.js")"> </script>
  <script type="text/javascript" src="@Url.Content("~/Scripts/ViewModels/DatesViewModel.js")"> </script>
  <script type="text/javascript" src="@Url.Content("~/Scripts/ViewModels/ChangesetFilter.js")"> </script>
  <script type="text/javascript" src="@Url.Content("~/Scripts/ViewModels/CalendarViewModel.js")"> </script>
  <script type="text/javascript" src="@Url.Content("~/Scripts/ViewModels/CommitsViewModel.js")"> </script>
  <script type="text/javascript" src="@Url.Content("~/Scripts/ViewModels/initHome.js")"> </script>
  <script type="text/javascript" src="@Url.Content("~/Scripts/ViewModels/UserName.js")"> </script>
  <script type="text/javascript" src="@Url.Content("~/Scripts/Chart.js")"> </script>
  <script type="text/javascript" src="@Url.Content("~/Scripts/Chart.min.js")"> </script>
  <script type="text/javascript">
    //userNameViewModel.UserNames.push('@System.Environment.UserName');
    //commitsViewModel.setUsername('@System.Environment.UserName');
    user = "l.kaczanowski";
    userNameViewModel.UserNames.push(user);
    commitsViewModel.setUsername(user);

    var date = new Date();
    var day = date.getDate();
    var year = date.getFullYear();
    var month = date.getMonth();
    date.setHours(0);
    date.setMinutes(0);
    date.setSeconds(0);
    date.setFullYear(date.getFullYear() - 1);
    date.setDate(date.getDate() - 1);
    datesViewModel.DateFrom(date);
    calendarViewModel.getChangesets();

    function show() {
      var json = JSON.stringify(display);
      var dataObj = JSON.parse(json);
      cal.update(dataObj);
      cal.options.data = dataObj;
    }
    function updateCommits() {
      commitsViewModel.getCommits();
    }
    $('#1').click(function (e) {
      e.preventDefault();
      commitsViewModel.setPeriod(2);
      commitsViewModel.getCommits();
    });
    $('#2').click(function (e) {
      e.preventDefault();
      commitsViewModel.setPeriod(4);
      commitsViewModel.getCommits();
    });
    $('#3').click(function (e) {
      e.preventDefault();
      commitsViewModel.setPeriod(8);
      commitsViewModel.getCommits();
    });
    $('#4').click(function (e) {
      e.preventDefault();
      commitsViewModel.setPeriod(22);
      commitsViewModel.getCommits();
    });
    $('#5').click(function (e) {
      e.preventDefault();
      commitsViewModel.setPeriod(31);
      commitsViewModel.getCommits();
    });
    $('#6').click(function (e) {
      e.preventDefault();
      commitsViewModel.setPeriod(61);
      commitsViewModel.getCommits();
    });
    $('#s1').click(function (e) {
      e.preventDefault();
      commitsViewModel.setSortOption(1);
      commitsViewModel.getCommits();
    });
    $('#s2').click(function (e) {
      e.preventDefault();
      commitsViewModel.setSortOption(0);
      commitsViewModel.getCommits();
    });
  </script>

  <script type="text/javascript">
    var lab = [];
    var dat = [];
    for (var i = 0; i < _data.length; i++) {
      var exists = 0;
      for (var j = 0; j < lab.length; j++) {
        if (lab[j] === _data[i].repositoryName) {
          dat[j]++;
          exists = 1;
          break;
        }
      }
      if (exists === 0) {
        lab.push(_data[i].repositoryName);
        dat.push(1);
      }
    }

    var data = {
      labels: lab,
      datasets: [
          {
            label: 'Commits #',
            fillColor: '#7BC225',
            data: dat
          }
      ]
    };
    var max = 0;
    for (var i = 0; i < dat.length; i++) {
      if (dat[i] > max) {
        max = dat[i];
      }
    }
    var context = document.getElementById('repos').getContext('2d');
    context.canvas.width = window.innerWidth*0.92;
    context.canvas.height = max*5;
    new Chart(context).Bar(data);
  </script>
}